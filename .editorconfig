; CluedIn EditorConfig

##########################################################################################################
# Core EditorConfig Options
##########################################################################################################

; Top-most EditorConfig file
root                                                                     = true

# All files
[*]
# don't use tabs for indentation
indent_style                                                             = space:error

[*{cs,csx,vb,vbx}]
indent_size                                                              = 4
charset                                                                  = utf-8-bom:error
end_of_line                                                              = CRLF

# xml project files
[*.{csproj,vbproj,proj,projitems,shproj}]
indent_size                                                              = 2

# xml config files
[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]
indent_size                                                              = 2

# json files
[*.json]
indent_size                                                              = 2

# whitespace handling
trim_trailing_whitespace                                                 = false
insert_final_newline                                                     = false

##########################################################################################################
# .NET Coding Conventions
##########################################################################################################

[*.{cs,csx,cake,vb}] 

# Organize usings 
dotnet_sort_system_directives_first                                      = true 

# this. preferences 
dotnet_style_qualification_for_field                                     = true:error 
dotnet_style_qualification_for_property                                  = true:error 
dotnet_style_qualification_for_method                                    = true:error 
dotnet_style_qualification_for_event                                     = true:error

# Language keywords vs BCL types preferences 
dotnet_style_predefined_type_for_locals_parameters_members               = true:error 
dotnet_style_predefined_type_for_member_access                           = true:error 

# Parentheses preferences 
dotnet_style_parentheses_in_arithmetic_binary_operators                  = always_for_clarity:warning 
dotnet_style_parentheses_in_relational_binary_operators                  = always_for_clarity:warning 
dotnet_style_parentheses_in_other_binary_operators                       = always_for_clarity:warning 
dotnet_style_parentheses_in_other_operators                              = never_if_unnecessary:silent 

# Modifier preferences 
dotnet_style_require_accessibility_modifiers                             = for_non_interface_members:error 
dotnet_style_readonly_field                                              = true:suggestion 

# Expression-level preferences

dotnet_style_object_initializer                                          = true:suggestion 
dotnet_style_collection_initializer                                      = true:suggestion 
dotnet_style_explicit_tuple_names                                        = true:suggestion 
dotnet_style_null_propagation                                            = true:suggestion 
dotnet_style_coalesce_expression                                         = true:suggestion 
dotnet_style_prefer_is_null_check_over_reference_equality_method         = true:silent 
dotnet_style_prefer_auto_properties                                      = true:silent 
dotnet_style_prefer_conditional_expression_over_assignment               = true:silent 
dotnet_style_prefer_conditional_expression_over_return                   = true:silent 

dotnet_prefer_inferred_tuple_names                                       = true:suggestion 
dotnet_prefer_inferred_anonymous_type_member_names                       = true:suggestion 

##########################################################################################################
# Naming Conventions
##########################################################################################################

# Style Definitions 
dotnet_naming_style.pascal_case_style.capitalization                     = pascal_case 

# Use PascalCase for constant fields   
dotnet_naming_rule.constant_fields_should_be_pascal_case.severity        = suggestion 
dotnet_naming_rule.constant_fields_should_be_pascal_case.symbols         = constant_fields 
dotnet_naming_rule.constant_fields_should_be_pascal_case.style           = pascal_case_style 
dotnet_naming_symbols.constant_fields.applicable_kinds                   = field 
dotnet_naming_symbols.constant_fields.applicable_accessibilities         = * 
dotnet_naming_symbols.constant_fields.required_modifiers                 = const 

# Public members must be capitalized (public_members_must_be_capitalized)
dotnet_naming_rule.public_members_must_be_capitalized.symbols            = public_symbols
dotnet_naming_symbols.public_symbols.applicable_kinds                    = property,method,field,event,delegate
dotnet_naming_symbols.public_symbols.applicable_accessibilities          = public
dotnet_naming_symbols.public_symbols.required_modifiers                  = readonly

dotnet_naming_rule.public_members_must_be_capitalized.style              = first_word_upper_case_style
dotnet_naming_style.first_word_upper_case_style.capitalization           = first_word_upper

dotnet_naming_rule.public_members_must_be_capitalized.severity           = suggestion

#
dotnet_naming_rule.readonly_fields_capitalization.symbols                = readonly_fields
dotnet_naming_symbols.readonly_fields.applicable_kinds                   = field
dotnet_naming_symbols.readonly_fields.applicable_accessibilities         = private
dotnet_naming_symbols.readonly_fields.required_modifiers                 = readonly,static

dotnet_naming_rule.readonly_fields_capitalization.style                  = camel_case_style
dotnet_naming_style.camel_case_style.capitalization                      = camel_case

dotnet_naming_rule.readonly_fields_capitalization.severity               = suggestion

##########################################################################################################
# C# Code Style Settings
##########################################################################################################

[*.{cs,csx,cake}] 

# var preferences 
csharp_style_var_for_built_in_types                                      = true:suggestion
csharp_style_var_when_type_is_apparent                                   = true:suggestion
csharp_style_var_elsewhere                                               = true:suggestion

# prefer method-like constructs to have a block body
csharp_style_expression_bodied_methods                                   = false:none
csharp_style_expression_bodied_constructors                              = false:none
csharp_style_expression_bodied_operators                                 = false:none

# prefer property-like constructs to have an expression-body
csharp_style_expression_bodied_properties                                = true:none
csharp_style_expression_bodied_indexers                                  = true:none
csharp_style_expression_bodied_accessors                                 = true:none

# Pattern matching preferences 
csharp_style_pattern_matching_over_is_with_cast_check                    = true:suggestion 
csharp_style_pattern_matching_over_as_with_null_check                    = true:suggestion 

# Null-checking preferences 
csharp_style_throw_expression                                            = true:suggestion 
csharp_style_conditional_delegate_call                                   = true:suggestion 

# Modifier preferences 
csharp_preferred_modifier_order                                          = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:error 

# Expression-level preferences 
csharp_prefer_braces                                                     = false:none 
csharp_style_deconstructed_variable_declaration                          = true:suggestion 
csharp_prefer_simple_default_expression                                  = true:suggestion 
csharp_style_pattern_local_over_anonymous_function                       = true:suggestion 
csharp_style_inlined_variable_declaration                                = true:suggestion 

##########################################################################################################
# C# Formatting Rules
##########################################################################################################

# New line preferences 

#require braces to be on a new line for accessors, lambdas, control_blocks, types, methods, and properties (also known as "Allman" style)
csharp_new_line_before_open_brace                                        = accessors, lambdas, control_blocks, types, methods, properties
csharp_new_line_before_else                                              = true 
csharp_new_line_before_catch                                             = true 
csharp_new_line_before_finally                                           = true 
csharp_new_line_before_members_in_object_initializers                    = true 
csharp_new_line_before_members_in_anonymous_types                        = true 
csharp_new_line_between_query_expression_clauses                         = true 

# Indentation preferences 
csharp_indent_case_contents                                              = true:error 
csharp_indent_case_contents_when_block                                   = true
csharp_indent_switch_labels                                              = true:error 
csharp_indent_labels                                                     = flush_left 

# Space preferences 
csharp_space_after_cast                                                  = false 
csharp_space_after_keywords_in_control_flow_statements                   = true 
csharp_space_between_method_call_parameter_list_parentheses              = false 
csharp_space_between_method_declaration_parameter_list_parentheses       = false 
csharp_space_between_parentheses                                         = false 
csharp_space_before_colon_in_inheritance_clause                          = true 
csharp_space_after_colon_in_inheritance_clause                           = true 
csharp_space_around_binary_operators                                     = before_and_after 
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false 
csharp_space_between_method_call_name_and_opening_parenthesis            = false 
csharp_space_between_method_call_empty_parameter_list_parentheses        = false 

# Wrapping preferences 
csharp_preserve_single_line_statements                                   = true 
csharp_preserve_single_line_blocks                                       = true 

